<? namespace Bitrix\Main\Security\W;$GLOBALS['____848928121']= array(base64_decode(''.'dGl'.'tZQ=='),base64_decode(''.'dG'.'ltZQ'.'='.'='),base64_decode('anNv'.'bl'.'9kZWNvZG'.'U='),base64_decode('Y'.'XJyYXlfbW'.'V'.'yZ2U='),base64_decode('am9pb'.'g=='),base64_decode('am'.'9p'.'bg'.'=='),base64_decode('am9pbg=='),base64_decode('YXJyYXlf'.'cG9w'),base64_decode('YXJy'.'Y'.'Xlf'.'c2h'.'pZnQ='),base64_decode('Y'.'XJ'.'yY'.'Xlf'.'c2h'.'pZnQ='),base64_decode('YXJyYXlfc2hpZnQ='),base64_decode('YXJyY'.'Xlfc2hpZnQ='),base64_decode('Y'.'XJyYXlfbW'.'Vy'.'Z2'.'U'.'='),base64_decode('aXNfYXJyY'.'Xk='),base64_decode('YX'.'JyYXlf'.'bWVyZ'.'2U'.'='),base64_decode('aW'.'5fYX'.'J'.'yYXk='),base64_decode('aW5fYX'.'JyYXk='),base64_decode('aW5f'.'YXJ'.'yYXk='),base64_decode('aW5fYXJyYXk='),base64_decode('aW5'.'fYXJyY'.'X'.'k='),base64_decode('d'.'Glt'.'ZQ=='),base64_decode('dGltZQ=='),base64_decode('Y'.'XJyYXlfbWFw'),base64_decode('Z'.'2V0'.'X2xvYWRlZ'.'F9le'.'H'.'Rl'.'bnN'.'pb'.'25z'),base64_decode('anNvbl9lbm'.'NvZGU='),base64_decode(''.'a'.'nNvbl9l'.'bm'.'NvZGU='),base64_decode('c'.'Gh'.'wdmVyc2lvb'.'g='.'='),base64_decode('anNvbl9lbmNv'.'ZG'.'U='),base64_decode('a'.'m9pbg=='));if(!function_exists(__NAMESPACE__.'\\___678884616')){function ___678884616($_1332597975){static $_1530412945= false; if($_1530412945 == false) $_1530412945=array('V1dBTExfTE9DSw='.'=','c2VjdXJpdHk=','REF'.'UQQ==','eyI=','V1'.'dBTExfTE'.'9DSw==','c2VjdX'.'JpdHk=',''.'U0VDV'.'VJ'.'JV'.'Fl'.'fV'.'1dBTExfR'.'VhDRVBUSU9O','R'.'k'.'FJTF9DSEVDS0lOR'.'w==',''.'Q2F'.'uIG5vdCBleGV'.'j'.'dXRlIHd3YW'.'xsI'.'H'.'J1'.'b'.'GV'.'zOi'.'A=',''.'IFRyYWNl'.'OiA=','UkVRVU'.'VT'.'V'.'F'.'9VUkk'.'=','a2V5'.'cw'.'='.'=','d'.'mFsdWV'.'z',''.'U'.'0VD'.'VVJ'.'J'.'VFlfV1dBT'.'ExfTU'.'9ESU'.'ZZ','Lg==','U0VDV'.'VJ'.'JVFlfV1dB'.'TExf'.'VU'.'5T'.'R'.'VQ=','Lg='.'=',''.'U0VDVVJJVFlf'.'V1dBTExfRVhJVA==',''.'Lg==','Z2xvY'.'mFs','a2V5'.'cw==',''.'dmFsdWVz','Z2V0','Z2V'.'0','cG9z'.'dA'.'==','cG9zdA==',''.'Y29va2ll','Y29'.'va2ll',''.'cm'.'VxdWVzdA==',''.'cmVxdWVzdA==','Z2xvY'.'mFs','Z2xvYmFs','bWF'.'p'.'bl9zZWM=','V1dBTExfQUN'.'UVUFMSVpF'.'X1J'.'VTEVT','dg==','dmVyc2lvbg'.'==','aQ='.'=',''.'aXNJbnN0YWxs'.'ZWQ=','dg'.'==','aW5p','bW'.'9kdWxl'.'cw'.'==','b'.'G'.'lj'.'ZW5zZQ==','cGhw','dg==','ZX'.'h0','c2VjdXJp'.'d'.'Hk=','ZGI=',''.'dHlwZQ'.'==',''.'ZG'.'I'.'=','dmVyc2l'.'vbg==',''.'Z'.'GI'.'=','dHl'.'wZQ==','ZG'.'I=','d'.'HlwZQ='.'=',''.'dmV'.'yc2lvbg='.'=','ZGI'.'=','dmVyc2lv'.'bg==','ZW'.'52a'.'XJvb'.'m1lbn'.'Q'.'=','d'.'m1fdmVyc2l'.'vbg='.'=','dm0'.'=',''.'d'.'g==',''.'ZW'.'52'.'aXJ'.'vbm1lbnQ=','dm1'.'fdm'.'Vyc2lvb'.'g==',''.'c29ja'.'2'.'V0V'.'Glt'.'ZW91'.'dA==','c3Ry'.'ZWFtVG'.'lt'.'ZW'.'9'.'1'.'dA'.'==','K'.'Cc=','ZGF0'.'YQ==',''.'Jyw'.'gJw==',''.'bW9'.'k'.'dW'.'xl','Jy'.'wgJw==','bW9'.'kdWxlX'.'3Zlc'.'n'.'N'.'pb24=','Jyk=','LCA=','U0VD'.'V'.'VJJ'.'V'.'FlfV1dBTExfRVhDRVBUSU'.'9O','b'.'W'.'F'.'pbg'.'==',''.'RkFJTF9SR'.'U'.'ZSR'.'VNISU5'.'H',''.'Q2'.'F'.'u'.'IG5vdC'.'B'.'yZW'.'Zy'.'ZXNoIHd3YW'.'xsI'.'HJ1bG'.'VzOiA=','I'.'FRyYW'.'NlOiA=','Z'.'GF0'.'YQ==','eyI'.'=','LS0tLS1CRUdJTiBQVUJ'.'MSUMgS0VZLS'.'0t'.'LS0=','C'.'k1J'.'SU'.'JJakF'.'OQmd'.'rcWh'.'raUc'.'5d'.'zB'.'CQV'.'FF'.'RkFBT0NBUThBTUlJQkNnS0N'.'B'.'UU'.'VBc'.'T'.'hRRTBIam1'.'ISlVTdFdWNm4w'.'emEKUlZvT'.'HgwMkt6YmZ'.'y'.'YlMv'.'U'.'DZzV2F4VHp3'.'OF'.'Nl'.'R1R0Yl'.'R'.'DT3Jw'.'SGk'.'1U'.'UY'.'2T1J5al'.'ovWHh6L0tMV'.'TFHYm9'.'m'.'OUNaMw'.'o'.'0ejdTa3FV'.'dDY2'.'aWJYdk9GQng0Z'.'ncvQVBQU'.'k'.'dEcXRtM'.'G5'.'EM'.'2ZnR3N1M'.'1JlUGd3Mj'.'lp'.'OCt'.'2bTdtdE'.'J'.'LSlVZ'.'bD'.'RyCl'.'ZwYjZzZ'.'lpFVDlLRW'.'I2VD'.'FIR'.'FltRXZjMW'.'hx'.'L'.'2lp'.'dXl'.'4TH'.'J'.'aWmk1U'.'T'.'ZVZmY0'.'VU'.'V2VEkrN'.'jhzc'.'0ZSa'.'1Erb3d'.'UUnkKZU9J'.'TWJGaE0vV'.'VRtZ'.'lZZYlRSR'.'nkyb1'.'VROFd'.'Ne'.'mE'.'yb'.'k'.'o1U2FoemkxVUtP'.'MWp'.'B'.'alhUUFJye'.'mM3QW'.'p1N'.'jM'.'5a'.'jFPM'.'Ap'.'wcHFmbTV4Z1dsRkF'.'Ka0'.'h'.'RVGdiZ'.'GQ'.'1'.'QVd'.'xREZR'.'a3Q5SEt'.'rWStUbmZCTEdWTX'.'ZWeVB3VEhOV'.'1FZQXc0'.'e'.'HBnL3dBClp3SURBUU'.'FCCi0'.'t'.'LS0tR'.'U5EI'.'FBV'.'Q'.'kxJQy'.'BLR'.'Vkt'.'LS0'.'tLQ='.'=');return base64_decode($_1530412945[$_1332597975]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\Loader; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; use CSecuritySystemInformation; use ReflectionExtension; class WWall{ const CACHE_RULES_TTL= 10800; private static $_1116295264= 'https://wwall.bitrix.info/rules.php'; protected $_1086103597= true; public function handle(){ try{  $_1244410696= RuleRecordTable::getList([ 'cache' =>['ttl' => 3600* 24* 7]])->fetchAll(); if(empty($_1244410696)){ return;}  $_819778975= Cache::createInstance(); $_1298759976= false; if($_819778975->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_850668355= $_819778975->getVars(); if($GLOBALS['____848928121'][0]()- $_850668355> round(0+20)){  $_1139762044= Application::getConnection(); $_819659071= RuleRecordTable::getTableName(); $_1139762044->truncateTable($_819659071); RuleRecordTable::cleanCache(); $_819778975->clean(___678884616(0), ___678884616(1));}} elseif($_819778975->startDataCache()){  $_819778975->endDataCache($GLOBALS['____848928121'][1]()); $_1298759976= true;} foreach($_1244410696 as $_1384380014){ $_966507254= new PublicKeyCipher; $_1072293124= $_966507254->decrypt($_1384380014[___678884616(2)], static::__1137892655()); if(!str_starts_with($_1072293124, ___678884616(3))){ continue;} $_1875254496= $GLOBALS['____848928121'][2]($_1072293124, true); if(!empty($_1875254496)){ $_1871544643= Rule::make($_1875254496); $_233208180= $this->handleRule($_1871544643); $this->applyHandlingResults($_233208180);}}  if($_1298759976){ $_819778975->clean(___678884616(4), ___678884616(5));}} catch(\Throwable $_769409687){ $this->logEvent( ___678884616(6), ___678884616(7), ___678884616(8). $_769409687->getMessage(). ___678884616(9). $_769409687->getTraceAsString());}}  public function handleRule(Rule $_1871544643): array{ $_233208180=[]; if($_1871544643->matchPath($_SERVER[___678884616(10)])){  $_1121927820= $this->getContextElements($_1871544643->getContext()); foreach($_1121927820 as $_1587338522 => &$_1429991350){ $_233208180= $GLOBALS['____848928121'][3]($_233208180, $this->recursiveContextKeyHandle($_1587338522, $_1429991350,[], $_1871544643));}} return $_233208180;}  public function applyHandlingResults(array $_233208180){ $_1121927820= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_233208180 as $_1209311512){ $_1429991350=& $_1121927820[$_1209311512->getContextName()]; $_418195129= $_1209311512->getRuleResult(); $_1871544643= $_1209311512->getRule(); if($_418195129 instanceof ModifyResult){ if($_1871544643->getProcess() === ___678884616(11)){  static::rewriteContextKey( $_1209311512->getContextName(), $_1429991350, $_1209311512->getContextKey(), $_418195129->getCleanValue());} elseif($_1871544643->getProcess() === ___678884616(12)){ static::rewriteContextValue( $_1209311512->getContextName(), $_1429991350, $_1209311512->getContextKey(), $_418195129->getCleanValue());} $this->logEvent( ___678884616(13), $_1209311512->getContextName(), $GLOBALS['____848928121'][4](___678884616(14), $_1209311512->getContextKey()));} elseif($_418195129 instanceof CheckResult &&!$_418195129->isSuccess()){ if($_418195129->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_1209311512->getContextName(), $_1429991350, $_1209311512->getContextKey(),); $this->logEvent( ___678884616(15), $_1209311512->getContextName(), $GLOBALS['____848928121'][5](___678884616(16), $_1209311512->getContextKey()));} elseif($_418195129->getAction() === RuleAction::EXIT){ $this->logEvent( ___678884616(17), $_1209311512->getContextName(), $GLOBALS['____848928121'][6](___678884616(18), $_1209311512->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_1086103597= false;} protected function rewriteContextKey($_1587338522, &$_1429991350, $_1371155425, $_1575740799){ $_1982643456= $_1371155425;  $GLOBALS['____848928121'][7]($_1982643456); $_1982643456[]= $_1575740799; if($_1587338522 === ___678884616(19)){ $_881353156= $GLOBALS['____848928121'][8]($_1371155425); $GLOBALS['____848928121'][9]($_1982643456); if(empty($_1371155425)){ $GLOBALS[$_1575740799]= $GLOBALS[$_881353156]; unset($GLOBALS[$_881353156]);} else{ $_1429991350=& $GLOBALS[$_881353156]; $_1764847990= ArrayHelper::getByNestedKey($_1429991350, $_1371155425);  ArrayHelper::setByNestedKey($_1429991350, $_1982643456, $_1764847990);  ArrayHelper::unsetByNestedKey($_1429991350, $_1371155425);}} else{ $_1764847990= ArrayHelper::getByNestedKey($_1429991350, $_1371155425);  ArrayHelper::setByNestedKey($_1429991350, $_1982643456, $_1764847990);  ArrayHelper::unsetByNestedKey($_1429991350, $_1371155425);}} protected function rewriteContextValue($_1587338522, &$_1429991350, $_1308526499, $_1764847990){ if($_1587338522 === 'global'){ $_881353156= $GLOBALS['____848928121'][10]($_1308526499); if(empty($_1308526499)){ $GLOBALS[$_881353156]= $_1764847990;} else{ $_1429991350=& $GLOBALS[$_881353156]; ArrayHelper::setByNestedKey($_1429991350, $_1308526499, $_1764847990);}} else{  ArrayHelper::setByNestedKey($_1429991350, $_1308526499, $_1764847990);}} protected function unsetContextValue($_1587338522, &$_1429991350, $_1308526499){ if($_1587338522 === 'global'){ $_881353156= $GLOBALS['____848928121'][11]($_1308526499); if(empty($_1308526499)){ unset($GLOBALS[$_881353156]);} else{ $_1429991350=& $GLOBALS[$_881353156]; ArrayHelper::unsetByNestedKey($_1429991350, $_1308526499);}} else{ ArrayHelper::unsetByNestedKey($_1429991350, $_1308526499);}}  protected function recursiveContextKeyHandle(string $_1587338522, array &$_1429991350, array $_1527009959, Rule $_1871544643): array{  $_233208180=[]; foreach($_1429991350 as $_1752881316 => $_1764847990){ $_1308526499= $GLOBALS['____848928121'][12]($_1527009959,[$_1752881316]); if($_1871544643->matchKey($_1308526499)){  if($_1871544643->getProcess() === ___678884616(20)){ $_418195129= $_1871544643->evaluate($_1752881316);} elseif($_1871544643->getProcess() === ___678884616(21)){ $_418195129= $_1871544643->evaluateValue($_1764847990);}  if(!empty($_418195129) && $_418195129 instanceof RuleResult){ $_233208180[]= new HandlingResult($_1587338522, $_1308526499, $_418195129, $_1871544643);}}  if($GLOBALS['____848928121'][13]($_1764847990)){ $_233208180= $GLOBALS['____848928121'][14]($_233208180, $this->recursiveContextKeyHandle( $_1587338522, $_1429991350[$_1752881316], $_1308526499, $_1871544643));}} return $_233208180;} protected function getContextElements(array $_1035492228){ $_2102940834=[]; if($GLOBALS['____848928121'][15](___678884616(22), $_1035492228, true)){ $_2102940834[___678884616(23)]= &$_GET;} if($GLOBALS['____848928121'][16](___678884616(24), $_1035492228, true)){ $_2102940834[___678884616(25)]= &$_POST;} if($GLOBALS['____848928121'][17](___678884616(26), $_1035492228, true)){ $_2102940834[___678884616(27)]= &$_COOKIE;} if($GLOBALS['____848928121'][18](___678884616(28), $_1035492228, true)){ $_2102940834[___678884616(29)]= &$_REQUEST;} if($GLOBALS['____848928121'][19](___678884616(30), $_1035492228, true)){ $_2102940834[___678884616(31)]= $GLOBALS;} return $_2102940834;} public static function refreshRules(){ try{ $_687216515= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____848928121'][20]()- $_687216515)< static::CACHE_RULES_TTL){ return;} Option::set(___678884616(32), ___678884616(33), $GLOBALS['____848928121'][21]()); $_1393026342= null;  $_461109563= $GLOBALS['____848928121'][22](function($_201423503){ return[___678884616(34) => $_201423503[___678884616(35)], ___678884616(36) => (int) $_201423503[___678884616(37)]];}, ModuleManager::getModulesFromDisk());  $_1312861774=[]; foreach($GLOBALS['____848928121'][23]() as $_1320589287){ $_1100083927= new ReflectionExtension($_1320589287); $_1312861774[$_1320589287]=[ ___678884616(38) => $_1100083927->getVersion(), ___678884616(39) => $_1100083927->getINIEntries()];} $_1961362717=[ ___678884616(40) => $GLOBALS['____848928121'][24]($_461109563), ___678884616(41) => Application::getInstance()->getLicense()->getHashLicenseKey(), ___678884616(42) => $GLOBALS['____848928121'][25]([ ___678884616(43) => $GLOBALS['____848928121'][26](), ___678884616(44) => $_1312861774])]; if(Loader::includeModule(___678884616(45))){ $_1746915946= CSecuritySystemInformation::getSystemInformation(); if(isset($_1746915946[___678884616(46)][___678884616(47)]) && isset($_1746915946[___678884616(48)][___678884616(49)])){ $_1961362717[___678884616(50)]=[ ___678884616(51) => $_1746915946[___678884616(52)][___678884616(53)], ___678884616(54) => $_1746915946[___678884616(55)][___678884616(56)]];} if(isset($_1746915946[___678884616(57)][___678884616(58)])){ $_1961362717[___678884616(59)]=[___678884616(60) => $_1746915946[___678884616(61)][___678884616(62)]];}}  $_767802794= new HttpClient([ ___678884616(63) => round(0+1.25+1.25+1.25+1.25), ___678884616(64) => round(0+5)]); $_2099715056= $_767802794->post( static::$_1116295264, $_1961362717); if($_767802794->getStatus() == round(0+100+100) &&!empty($_2099715056)){ $_1393026342= Json::decode($_2099715056);}  if($_1393026342 !== null){ $_1139762044= Application::getConnection(); $_819659071= RuleRecordTable::getTableName(); if(!empty($_1393026342)){ foreach($_1393026342 as $_1549321887){ if(!static::checkRuleSign($_1549321887)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____848928121'][27]($_1549321887));}}}  $_1139762044->truncateTable($_819659071);  if(!empty($_1393026342)){ $_950160716=[]; foreach($_1393026342 as $_1549321887){ $_950160716[]= ___678884616(65). $_1139762044->getSqlHelper()->forSql($_1549321887[___678884616(66)]). ___678884616(67). $_1139762044->getSqlHelper()->forSql($_1549321887[___678884616(68)]). ___678884616(69). $_1139762044->getSqlHelper()->forSql($_1549321887[___678884616(70)]). ___678884616(71);} $_1634007248= $GLOBALS['____848928121'][28](___678884616(72), $_950160716);  $_1139762044->query("INSERT INTO {$_819659071} (DATA, MODULE, MODULE_VERSION) VALUES {$_1634007248}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_769409687){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___678884616(73), ___678884616(74), ___678884616(75), ___678884616(76). $_769409687->getMessage(). ___678884616(77). $_769409687->getTraceAsString());}} protected static function checkRuleSign($_1871544643){ $_966507254= new PublicKeyCipher; $_1875254496= $_966507254->decrypt($_1871544643[___678884616(78)], static::__1137892655()); return str_starts_with($_1875254496, ___678884616(79));} private static function __1137892655(){ $_1633966319= ''; $_1633966319 .= ___678884616(80); $_1633966319 .= ___678884616(81); return $_1633966319;} protected function logEvent($_616459074, $_1034703307, $_1085622098){ if($this->_1086103597){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_616459074, 'main', $_1034703307, $_1085622098);}}}?>